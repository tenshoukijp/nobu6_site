function doMenuAdjustSize() { var e = parseInt($("#pushobj").css("height")) + 100, n = $(window).height(); e = e > n ? e : n, e = e > 3000 ? e : 3000, $("#menu").height() != e && ($("#menu").multilevelpushmenu("option", "menuHeight", e), $("#menu").multilevelpushmenu("redraw")) } function getPageLoadString() { return '<div class="divPageLoad"><font color="black">&nbsp;<i class="fa fa-spinner fa-pulse"></i>&nbsp;ページ読み込み中です｡｡｡<br></font></div>' } var menuMoveMode = !1, isViewingPageLoading = !1; $(document).ready(function () { $("#eventpanel").empty(), $("#menu").multilevelpushmenu({ containersToPush: [$("#pushobj")], menuWidth: 380, menuHeight: $(window).height(), onBackItemClick: function () { menuMoveMode = !0 }, onGroupItemClick: function () { menuMoveMode = !0 }, onCollapseMenuEnd: function () { if (1 == menuMoveMode && !$(location).attr("href").match("#")) { var e = 100; $("body,html").animate({ scrollTop: 0 }, e, "swing") } menuMoveMode = !1 }, onExpandMenuEnd: function () { if (1 == menuMoveMode && !$(location).attr("href").match("#")) { var e = 100; $("body,html").animate({ scrollTop: 0 }, e, "swing") } menuMoveMode = !1 }, onItemClick: function () { var e = (arguments[0], arguments[1]), n = arguments[2], o = (arguments[3], e.find("h2:first").text(), n.find("a:first").text(), n.find("a").attr("href")); "#" != o && (isViewingPageLoading || o.match("http") || (isViewingPageLoading = !0, $("#eventpanel").append(getPageLoadString())), menuMoveMode = !1, window.location = o) } }), doMenuExpand(), isViewed = !0 }), $(window).on("load", function () { setTimeout(function () { doMenuAdjustSize() }, 1e3), setTimeout(function () { doMenuAdjustSize() }, 3e3) }), $(window).on("resize", function () { setTimeout(function () { doMenuAdjustSize() }, 2e3) }), $(window).on("beforeunload", function (e) { $("divPageLoad").remove() });